(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-7af1c036"],{"12d05":function(e,t,n){},"4c6b":function(e,t,n){},"62fb":function(e,t,n){"use strict";n("4c6b")},dda8:function(e,t,n){"use strict";n.r(t);var s=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-row",[n("b-col",{attrs:{cols:"12"}},[n("auto-suggest-basic"),n("auto-suggest-slot"),n("auto-suggest-section"),n("auto-suggest-ajax")],1)],1)},i=[],o=n("a15b"),a=n("b28b"),r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-card-code",{attrs:{title:"Basic"},scopedSlots:e._u([{key:"code",fn:function(){return[e._v(" "+e._s(e.codeBasic)+" ")]},proxy:!0}])},[n("vue-autosuggest",{attrs:{suggestions:e.filteredOptions,limit:10,"input-props":{id:"autosuggest__input",class:"form-control",placeholder:"Do you feel lucky?"}},on:{input:e.onInputChange},scopedSlots:e._u([{key:"default",fn:function(t){var s=t.suggestion;return[n("span",{staticClass:"my-suggestion-item"},[e._v(e._s(s.item.name))])]}}])})],1)},u=[],l=(n("fb6a"),n("4de4"),n("d3b7"),n("b0c0"),n("99af"),n("2831")),d=n("541c"),c="\n<template>\n  <vue-autosuggest\n    :suggestions=\"filteredOptions\"\n    :limit=\"10\"\n    :input-props=\"{id:'autosuggest__input',class:'form-control', placeholder:'Do you feel lucky?'}\"\n    @input=\"onInputChange\"\n  >\n    <template slot-scope=\"{suggestion}\">\n      <span class=\"my-suggestion-item\">{{ suggestion.item.name }}</span>\n    </template>\n  </vue-autosuggest>\n</template>\n\n<script>\nimport { VueAutosuggest } from 'vue-autosuggest'\n\nexport default {\n  components: {\n    VueAutosuggest,\n  },\n  data() {\n    return {\n      datasuggest: [],\n      filteredOptions: [],\n      limit: 10,\n      selected: null,\n    }\n  },\n  created() {\n    this.$http.get('/autosuggest/data')\n      .then(res => { this.datasuggest = res })\n  },\n  methods: {\n    onInputChange(text) {\n      if (text === '' || text === undefined) {\n        return\n      }\n\n      /* Full control over filtering. Maybe fetch from API?! Up to you!!! */\n      const filteredDevelopers = this.datasuggest.data[0].developers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\n      const filteredDesigner = this.datasuggest.data[0].designers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\n      const filteredData = filteredDevelopers.concat(filteredDesigner)\n      this.filteredOptions = [{\n        data: filteredData,\n      }]\n    },\n  },\n}\n<\/script>\n",g='\n<template>\n  <vue-autosuggest\n    :suggestions="filteredOptions"\n    :input-props="inputProps"\n    :on-selected="onSelected"\n    :limit="10"\n    @input="onInputChange"\n  >\n    <template slot-scope="{suggestion}">\n      <div class="d-flex align-items-center">\n        <b-avatar :src="suggestion.item.img" />\n        <div class="detail ml-50">\n          <b-card-text class="mb-0">\n            {{ suggestion.item.name }}\n          </b-card-text>\n          <small class="text-muted">\n            {{ suggestion.item.time }}\n          </small>\n        </div>\n      </div>\n    </template>\n  </vue-autosuggest>\n</template>\n\n<script>\nimport { VueAutosuggest } from \'vue-autosuggest\'\nimport { BAvatar, BCardText } from \'bootstrap-vue\'\n\nexport default {\n  components: {\n    VueAutosuggest,\n    BCardText,\n    BAvatar,\n  },\n  data() {\n    return {\n      datasuggest: [],\n      filteredOptions: [],\n      inputProps: {\n        id: \'autosuggest__input\',\n        class: \'form-control\',\n        placeholder: "Type \'e\'",\n      },\n      limit: 10,\n    }\n  },\n  created() {\n    this.$http.get(\'/autosuggest/data\')\n      .then(res => { this.datasuggest = res })\n  },\n  methods: {\n    onSelected(option) {\n      this.selected = option.item\n    },\n    onInputChange(text) {\n      if (text === \'\' || text === undefined) {\n        return\n      }\n\n      /* Full control over filtering. Maybe fetch from API?! Up to you!!! */\n      const filteredDevelopers = this.datasuggest.data[0].developers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\n      const filteredDesigner = this.datasuggest.data[0].designers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\n      const filteredData = filteredDevelopers.concat(filteredDesigner)\n      this.filteredOptions = [{\n        data: filteredData,\n      }]\n    },\n  },\n}\n<\/script>\n',m='\n<template>\n  <vue-autosuggest\n    v-model="query"\n    :suggestions="suggestions"\n    :input-props="inputProps"\n    :section-configs="sectionConfigs"\n    :render-suggestion="renderSuggestion"\n    :limit="10"\n    @input="fetchResults"\n  />\n</template>\n\n<script>\n/* eslint-disable vue/no-unused-components */\n/* eslint no-unused-expressions: ["error", { "allowShortCircuit": true }] */\nimport { VueAutosuggest } from \'vue-autosuggest\'\nimport { BAvatar, BCardText } from \'bootstrap-vue\'\n\nexport default {\n  components: {\n    VueAutosuggest,\n    BAvatar,\n    BCardText,\n  },\n  data() {\n    return {\n      datasuggest: [],\n      query: \'\',\n      suggestions: [],\n      selected: null,\n      inputProps: {\n        id: \'autosuggest__input\',\n        class: \'form-control\',\n        placeholder: "Type \'e\'",\n      },\n      sectionConfigs: {\n        developers: {\n          limit: 6,\n          label: \'Developers\',\n          onSelected: selected => {\n            this.selected = selected.item\n          },\n        },\n        pages: {\n          limit: 6,\n          label: \'Pages\',\n          onSelected: selected => {\n            this.selected = selected.item\n          },\n        },\n      },\n      limit: 10,\n    }\n  },\n  created() {\n    this.$http.get(\'/autosuggest/data\')\n      .then(res => { this.datasuggest = res })\n  },\n  methods: {\n    fetchResults(text) {\n      const { query } = this\n      if (query) {\n        this.suggestions = []\n      }\n\n      /* Full control over filtering. Maybe fetch from API?! Up to you!!! */\n      const filteredDevelopers = this.datasuggest.data[0].developers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\n      const filteredPages = this.datasuggest.data[0].pages.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\n      filteredDevelopers.length && this.suggestions.push({ name: \'developers\', data: filteredDevelopers })\n      filteredPages.length && this.suggestions.push({ name: \'pages\', data: filteredPages })\n    },\n    renderSuggestion(suggestion) {\n      if (suggestion.name === \'developers\') {\n        const dev = suggestion.item\n        return (\n          <div class="d-flex align-items-center">\n            <b-avatar src={dev.img} class="mr-50"></b-avatar>\n            <div class="detail">\n              <b-card-text class="mb-0">{dev.name}</b-card-text>\n              <small class="text-muted">{dev.email}</small>\n            </div>\n          </div>\n        )\n      }\n      if (suggestion.name === \'pages\') {\n        const page = suggestion.item\n        return (\n          <div class="d-flex align-items-center">\n            <feather-icon icon={page.icon} size={\'18\'} class={\'mr-75\'} />\n            <span>{page.name}</span>\n          </div>\n        )\n      }\n      return false\n    },\n  },\n}\n<\/script>\n',p="\n<template>\n  <div>\n    <vue-autosuggest\n      ref=\"autocomplete\"\n      v-model=\"query\"\n      :suggestions=\"suggestions\"\n      :input-props=\"inputProps\"\n      :section-configs=\"sectionConfigs\"\n      :render-suggestion=\"renderSuggestion\"\n      :get-suggestion-value=\"getSuggestionValue\"\n      @input=\"fetchResults\"\n    />\n\n    <b-card-text class=\"mt-1\">\n      Selected element (object):\n    </b-card-text>\n    <b-card\n      class=\"border\"\n      no-body\n    >\n      <pre>{{ JSON.stringify(selected, null, 4) }}</pre>\n    </b-card>\n  </div>\n</template>\n\n<script>\n/* eslint-disable vue/no-unused-components */\n/* eslint no-unused-expressions: [\"error\", { \"allowShortCircuit\": true }] */\nimport { BCard, BCardText, BAvatar } from 'bootstrap-vue'\nimport { VueAutosuggest } from 'vue-autosuggest'\nimport axios from 'axios'\n\nexport default {\n  components: {\n    VueAutosuggest,\n    BCard,\n    BCardText,\n    BAvatar,\n  },\n  data() {\n    return {\n      query: '',\n      results: [],\n      timeout: null,\n      selected: null,\n      debounceMilliseconds: 250,\n      usersUrl: 'https://jsonplaceholder.typicode.com/users',\n      photosUrl: 'https://jsonplaceholder.typicode.com/photos',\n      inputProps: {\n        id: 'autosuggest__input_ajax',\n        placeholder: 'Do you feel lucky, punk?',\n        class: 'form-control',\n        name: 'ajax',\n      },\n      suggestions: [],\n      sectionConfigs: {\n        destinations: {\n          limit: 6,\n          label: 'Destination',\n          onSelected: selected => {\n            this.selected = selected.item\n          },\n        },\n        hotels: {\n          limit: 6,\n          label: 'Hotels',\n          onSelected: selected => {\n            this.selected = selected.item\n          },\n        },\n      },\n    }\n  },\n  methods: {\n    fetchResults() {\n      const { query } = this\n\n      clearTimeout(this.timeout)\n      this.timeout = setTimeout(() => {\n        const photosPromise = axios.get(this.photosUrl)\n        const usersPromise = axios.get(this.usersUrl)\n\n        Promise.all([photosPromise, usersPromise]).then(values => {\n          this.suggestions = []\n          this.selected = null\n\n          const photos = this.filterResults(values[0].data, query, 'title')\n          const users = this.filterResults(values[1].data, query, 'name')\n          users.length && this.suggestions.push({ name: 'destinations', data: users })\n          photos.length && this.suggestions.push({ name: 'hotels', data: photos })\n        })\n      }, this.debounceMilliseconds)\n    },\n    filterResults(data, text, field) {\n      return data.filter(item => {\n        if (item[field].toLowerCase().indexOf(text.toLowerCase()) > -1) {\n          return item[field]\n        }\n        return false\n      }).sort()\n    },\n    renderSuggestion(suggestion) {\n      if (suggestion.name === 'hotels') {\n        const image = suggestion.item\n        return (\n          <div class=\"d-flex\">\n            <div>\n              <b-avatar src={image.thumbnailUrl} class=\"mr-50\"></b-avatar>\n            </div>\n            <div>\n              <span>{image.title}</span>\n            </div>\n          </div>\n        )\n      }\n      return suggestion.item.name\n    },\n    getSuggestionValue(suggestion) {\n      const { name, item } = suggestion\n      return name === 'hotels' ? item.title : item.name\n    },\n  },\n}\n<\/script>\n\n<style lang=\"scss\" scoped>\npre{\n  min-height: 295px;\n  padding: 1.5rem;\n  margin-bottom: 0;\n  border-radius: .5rem;\n}\n</style>\n",f={components:{VueAutosuggest:l["a"],BCardCode:d["a"]},data:function(){return{datasuggest:[],filteredOptions:[],limit:10,selected:null,codeBasic:c}},created:function(){var e=this;this.$http.get("/autosuggest/data").then((function(t){e.datasuggest=t}))},methods:{onInputChange:function(e){if(""!==e&&void 0!==e){var t=this.datasuggest.data[0].developers.filter((function(t){return t.name.toLowerCase().indexOf(e.toLowerCase())>-1})).slice(0,this.limit),n=this.datasuggest.data[0].designers.filter((function(t){return t.name.toLowerCase().indexOf(e.toLowerCase())>-1})).slice(0,this.limit),s=t.concat(n);this.filteredOptions=[{data:s}]}}}},h=f,v=n("2877"),x=Object(v["a"])(h,r,u,!1,null,null,null),b=x.exports,C=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-card-code",{attrs:{title:"Slot"},scopedSlots:e._u([{key:"code",fn:function(){return[e._v(" "+e._s(e.codeSlot)+" ")]},proxy:!0}])},[n("vue-autosuggest",{attrs:{suggestions:e.filteredOptions,"input-props":e.inputProps,"on-selected":e.onSelected,limit:10},on:{input:e.onInputChange},scopedSlots:e._u([{key:"default",fn:function(t){var s=t.suggestion;return[n("div",{staticClass:"d-flex align-items-center"},[n("b-avatar",{attrs:{src:s.item.img}}),n("div",{staticClass:"detail ml-50"},[n("b-card-text",{staticClass:"mb-0"},[e._v(" "+e._s(s.item.name)+" ")]),n("small",{staticClass:"text-muted"},[e._v(" "+e._s(s.item.time)+" ")])],1)],1)]}}])})],1)},y=[],_=n("d6e4"),S=n("e8a3"),w={components:{VueAutosuggest:l["a"],BCardCode:d["a"],BCardText:_["a"],BAvatar:S["a"]},data:function(){return{datasuggest:[],filteredOptions:[],inputProps:{id:"autosuggest__input",class:"form-control",placeholder:"Type 'e'"},limit:10,codeSlot:g}},created:function(){var e=this;this.$http.get("/autosuggest/data").then((function(t){e.datasuggest=t}))},methods:{onSelected:function(e){this.selected=e.item},onInputChange:function(e){if(""!==e&&void 0!==e){var t=this.datasuggest.data[0].developers.filter((function(t){return t.name.toLowerCase().indexOf(e.toLowerCase())>-1})).slice(0,this.limit),n=this.datasuggest.data[0].designers.filter((function(t){return t.name.toLowerCase().indexOf(e.toLowerCase())>-1})).slice(0,this.limit),s=t.concat(n);this.filteredOptions=[{data:s}]}}}},O=w,A=Object(v["a"])(O,C,y,!1,null,null,null),B=A.exports,L=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-card-code",{attrs:{title:"Section"},scopedSlots:e._u([{key:"code",fn:function(){return[e._v(" "+e._s(e.codeSection)+" ")]},proxy:!0}])},[n("vue-autosuggest",{attrs:{suggestions:e.suggestions,"input-props":e.inputProps,"section-configs":e.sectionConfigs,"render-suggestion":e.renderSuggestion,limit:10},on:{input:e.fetchResults},model:{value:e.query,callback:function(t){e.query=t},expression:"query"}})],1)},P=[],D={components:{VueAutosuggest:l["a"],BCardCode:d["a"],BAvatar:S["a"],BCardText:_["a"]},data:function(){var e=this;return{codeSection:m,datasuggest:[],query:"",suggestions:[],selected:null,inputProps:{id:"autosuggest__input",class:"form-control",placeholder:"Type 'e'"},sectionConfigs:{developers:{limit:6,label:"Developers",onSelected:function(t){e.selected=t.item}},pages:{limit:6,label:"Pages",onSelected:function(t){e.selected=t.item}}},limit:10}},created:function(){var e=this;this.$http.get("/autosuggest/data").then((function(t){e.datasuggest=t}))},methods:{fetchResults:function(e){var t=this.query;t&&(this.suggestions=[]);var n=this.datasuggest.data[0].developers.filter((function(t){return t.name.toLowerCase().indexOf(e.toLowerCase())>-1})).slice(0,this.limit),s=this.datasuggest.data[0].pages.filter((function(t){return t.name.toLowerCase().indexOf(e.toLowerCase())>-1})).slice(0,this.limit);n.length&&this.suggestions.push({name:"developers",data:n}),s.length&&this.suggestions.push({name:"pages",data:s})},renderSuggestion:function(e){var t=this.$createElement;if("developers"===e.name){var n=e.item;return t("div",{class:"d-flex align-items-center"},[t("b-avatar",{attrs:{src:n.img},class:"mr-50"}),t("div",{class:"detail"},[t("b-card-text",{class:"mb-0"},[n.name]),t("small",{class:"text-muted"},[n.email])])])}if("pages"===e.name){var s=e.item;return t("div",{class:"d-flex align-items-center"},[t("feather-icon",{attrs:{icon:s.icon,size:"18"},class:"mr-75"}),t("span",[s.name])])}return!1}}},j=D,q=Object(v["a"])(j,L,P,!1,null,null,null),k=q.exports,T=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-card-code",{attrs:{title:"Ajax"},scopedSlots:e._u([{key:"code",fn:function(){return[e._v(" "+e._s(e.codeAjax)+" ")]},proxy:!0}])},[n("vue-autosuggest",{ref:"autocomplete",attrs:{suggestions:e.suggestions,"input-props":e.inputProps,"section-configs":e.sectionConfigs,"render-suggestion":e.renderSuggestion,"get-suggestion-value":e.getSuggestionValue},on:{input:e.fetchResults},model:{value:e.query,callback:function(t){e.query=t},expression:"query"}}),n("b-card-text",{staticClass:"mt-1"},[e._v(" Selected element (object): ")]),n("b-card",{staticClass:"border",attrs:{"no-body":""}},[n("pre",[e._v(e._s(JSON.stringify(e.selected,null,4)))])])],1)},V=[],R=(n("3ca3"),n("ddb0"),n("4e82"),n("205f")),U=n("bc3a"),$=n.n(U),I={components:{VueAutosuggest:l["a"],BCardCode:d["a"],BCard:R["a"],BCardText:_["a"],BAvatar:S["a"]},data:function(){var e=this;return{codeAjax:p,query:"",results:[],timeout:null,selected:null,debounceMilliseconds:250,usersUrl:"https://jsonplaceholder.typicode.com/users",photosUrl:"https://jsonplaceholder.typicode.com/photos",inputProps:{id:"autosuggest__input_ajax",placeholder:"Do you feel lucky, punk?",class:"form-control",name:"ajax"},suggestions:[],sectionConfigs:{destinations:{limit:6,label:"Destination",onSelected:function(t){e.selected=t.item}},hotels:{limit:6,label:"Hotels",onSelected:function(t){e.selected=t.item}}}}},methods:{fetchResults:function(){var e=this,t=this.query;clearTimeout(this.timeout),this.timeout=setTimeout((function(){var n=$.a.get(e.photosUrl),s=$.a.get(e.usersUrl);Promise.all([n,s]).then((function(n){e.suggestions=[],e.selected=null;var s=e.filterResults(n[0].data,t,"title"),i=e.filterResults(n[1].data,t,"name");i.length&&e.suggestions.push({name:"destinations",data:i}),s.length&&e.suggestions.push({name:"hotels",data:s})}))}),this.debounceMilliseconds)},filterResults:function(e,t,n){return e.filter((function(e){return e[n].toLowerCase().indexOf(t.toLowerCase())>-1&&e[n]})).sort()},renderSuggestion:function(e){var t=this.$createElement;if("hotels"===e.name){var n=e.item;return t("div",{class:"d-flex"},[t("div",[t("b-avatar",{attrs:{src:n.thumbnailUrl},class:"mr-50"})]),t("div",[t("span",[n.title])])])}return e.item.name},getSuggestionValue:function(e){var t=e.name,n=e.item;return"hotels"===t?n.title:n.name}}},E=I,M=(n("62fb"),Object(v["a"])(E,T,V,!1,null,"8f63cf16",null)),J=M.exports,F={components:{BRow:o["a"],BCol:a["a"],AutoSuggestBasic:b,AutoSuggestSlot:B,AutoSuggestSection:k,AutoSuggestAjax:J}},z=F,H=(n("ed07"),Object(v["a"])(z,s,i,!1,null,null,null));t["default"]=H.exports},ed07:function(e,t,n){"use strict";n("12d05")}}]);
//# sourceMappingURL=chunk-7af1c036.6f694dde.js.map