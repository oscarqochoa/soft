{"version":3,"sources":["webpack:///./src/views/commons/components/ncr/NcrMain.vue?4de4","webpack:///src/views/commons/components/ncr/NcrMain.vue","webpack:///./src/views/commons/components/ncr/NcrMain.vue?9fdb","webpack:///./src/views/commons/components/ncr/NcrMain.vue","webpack:///./src/views/commons/components/ncr/service/ncr.service.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","name","$route","meta","pendingRoute","bgTabsNavs","_v","returnedRoute","countData","currentUser","role_id","_e","completedRoute","key","staticRenderFns","data","computed","mapGetters","methods","countReturned","NrcService","user_id","modul","response","console","created","component","params","amgApi","post"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,eAAeA,EAAG,QAAQ,CAACE,YAAY,MAAMC,MAAM,CAAC,cAAc,GAAG,MAAQ,KAAK,CAACH,EAAG,aAAa,CAACG,MAAM,CAAC,GAAK,CAAEC,KAAMR,EAAIS,OAAOC,KAAKC,cAAe,MAAQ,GAAG,qBAAqB,SAAS,eAAe,CAAC,OAAOX,EAAIY,cAAc,CAACZ,EAAIa,GAAG,aAAaT,EAAG,aAAa,CAACG,MAAM,CAAC,GAAK,CAAEC,KAAMR,EAAIS,OAAOC,KAAKI,eAAgB,MAAQ,GAAG,qBAAqB,SAAS,eAAe,CAAC,OAAOd,EAAIY,cAAc,CAACZ,EAAIa,GAAG,cAAeb,EAAIe,UAAY,GAAgC,GAA3Bf,EAAIgB,YAAYC,QAAcb,EAAG,OAAO,CAACE,YAAY,QAAQ,CAACF,EAAG,eAAe,CAACG,MAAM,CAAC,KAAO,GAAG,MAAQP,EAAIe,UAAU,gBAAgB,sBAAsB,GAAGf,EAAIkB,OAAOd,EAAG,aAAa,CAACG,MAAM,CAAC,GAAK,CAAEC,KAAMR,EAAIS,OAAOC,KAAKS,gBAAiB,MAAQ,GAAG,qBAAqB,SAAS,eAAe,CAAC,OAAOnB,EAAIY,cAAc,CAACZ,EAAIa,GAAG,gBAAgB,GAAGT,EAAG,SAAS,CAACE,YAAY,kDAAkDC,MAAM,CAAC,UAAU,KAAK,CAACH,EAAG,cAAc,CAACgB,IAAIpB,EAAIS,OAAOD,QAAQ,IAAI,IACxhCa,EAAkB,G,4DC0CP,GACbC,KAAFA,WACI,MAAO,CACLP,UAAWA,OAGfQ,SAAUA,kBACZC,gBACIR,YAAJA,sBAGES,QAASA,CACPC,cAAJA,WAAA,qJACA,4BADA,0CAGAC,+BACAC,iCACAC,gCALA,OAGAC,EAHA,OAOA,gBACA,eACAA,2BACA,MACAA,yBAXA,mDAcAC,oBACA,eACA,SACA,YACA,QACA,QACA,yBApBA,8GAAAL,IA0BEM,QAAFA,WACI/B,KAAKyB,kBClFqX,I,YCO1XO,EAAY,eACd,EACAlC,EACAsB,GACA,EACA,KACA,KACA,MAIa,aAAAY,E,2GChBTN,E,qKAEF,WAA6BO,GAA7B,uGACuBC,OAAOC,KAAK,uCAAwCF,GAD3E,cACUZ,EADV,yBAEWA,GAFX,2C,6IAMA,WAAmBY,GAAnB,uGACuBC,OAAOC,KAAK,0BAA0BF,GAD7D,cACUZ,EADV,yBAEWA,GAFX,2C,kJAMA,WAAwBY,GAAxB,uGACuBC,OAAOC,KAAK,2CAA2CF,GAD9E,cACUZ,EADV,yBAEWA,GAFX,2C,iJAMA,WAAuBY,GAAvB,uGACuBC,OAAOC,KAAK,oCAAoCF,GADvE,cACUZ,EADV,yBAEWA,GAFX,2C,kJAKA,WAAwBY,GAAxB,uGACuBC,OAAOC,KAAK,uCAAuCF,GAD1E,cACUZ,EADV,yBAEWA,GAFX,2C,2IAMA,WAAiBY,GAAjB,uGACuBC,OAAOC,KAAK,uBAAuBF,GAD1D,cACUZ,EADV,yBAEWA,GAFX,2C,iEAOW,WAAIK","file":"js/chunk-9956636a.704f656a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header-slot'),_c('b-nav',{staticClass:\"m-0\",attrs:{\"card-header\":\"\",\"pills\":\"\"}},[_c('b-nav-item',{attrs:{\"to\":{ name: _vm.$route.meta.pendingRoute },\"exact\":\"\",\"exact-active-class\":\"active\",\"link-classes\":['px-3',_vm.bgTabsNavs]}},[_vm._v(\"Pending\")]),_c('b-nav-item',{attrs:{\"to\":{ name: _vm.$route.meta.returnedRoute },\"exact\":\"\",\"exact-active-class\":\"active\",\"link-classes\":['px-3',_vm.bgTabsNavs]}},[_vm._v(\" Returned \"),(_vm.countData > 0 && _vm.currentUser.role_id != 1)?_c('span',{staticClass:\"ml-2\"},[_c('feather-icon',{attrs:{\"icon\":\"\",\"badge\":_vm.countData,\"badge-classes\":\"badge-important\"}})],1):_vm._e()]),_c('b-nav-item',{attrs:{\"to\":{ name: _vm.$route.meta.completedRoute },\"exact\":\"\",\"exact-active-class\":\"active\",\"link-classes\":['px-3',_vm.bgTabsNavs]}},[_vm._v(\"Completed\")])],1),_c('b-card',{staticClass:\"border-top-primary border-3 border-table-radius\",attrs:{\"no-body\":\"\"}},[_c('router-view',{key:_vm.$route.name})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <header-slot></header-slot>\n    <!-- Navigation -->\n    <b-nav card-header pills class=\"m-0\">\n      <!-- Pending -->\n      <b-nav-item\n        :to=\"{ name: $route.meta.pendingRoute }\"\n        exact\n        exact-active-class=\"active\"\n        :link-classes=\"['px-3',bgTabsNavs]\"\n      >Pending</b-nav-item>\n      <!-- Returned -->\n      <b-nav-item\n        :to=\"{ name: $route.meta.returnedRoute }\"\n        exact\n        exact-active-class=\"active\"\n        :link-classes=\"['px-3',bgTabsNavs]\"\n      >\n        Returned\n        <span class=\"ml-2\" v-if=\"countData > 0 && currentUser.role_id != 1\">\n          <feather-icon icon :badge=\"countData\" badge-classes=\"badge-important\" />\n        </span>\n      </b-nav-item>\n      <!-- Completed -->\n      <b-nav-item\n        :to=\"{ name: $route.meta.completedRoute }\"\n        exact\n        exact-active-class=\"active\"\n        :link-classes=\"['px-3',bgTabsNavs]\"\n      >Completed</b-nav-item>\n    </b-nav>\n    <!-- Dynamic Route -->\n    <b-card no-body class=\"border-top-primary border-3 border-table-radius\">\n      <router-view :key=\"$route.name\"></router-view>\n    </b-card>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n//Import Services\nimport NrcService from \"./service/ncr.service\";\nexport default {\n  data:function() {\n    return {\n      countData: null\n    };\n  },\n  computed: {\n    ...mapGetters({\n      currentUser: \"auth/currentUser\"\n    })\n  },\n  methods: {\n    countReturned:async function() {\n      if (this.currentUser.role_id != 1) {\n        try {\n          const response = await NrcService.ncrLeadsCountInProcess({\n            user_id: this.currentUser.user_id,\n            modul: this.$route.meta.module\n          });\n          if (response.status == 200) {\n            this.countData =\n              response.data[0].countReturned > 99\n                ? \"+99\"\n                : response.data[0].countReturned;\n          }\n        } catch (error) {\n          console.error(error);\n          this.showToast(\n            \"danger\",\n            \"top-right\",\n            \"Error\",\n            \"XIcon\",\n            \"Something went wrong!\"\n          );\n        }\n      }\n    }\n  },\n  created:function() {\n    this.countReturned();\n  }\n};\n</script>\n\n<style >\n</style>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NcrMain.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NcrMain.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NcrMain.vue?vue&type=template&id=5fda5266&\"\nimport script from \"./NcrMain.vue?vue&type=script&lang=js&\"\nexport * from \"./NcrMain.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { amgApi } from '@/service/axios'\n\nclass NrcService {\n    //NCR Main\n    async ncrLeadsCountInProcess(params){\n        const data = await amgApi.post(\"/lead/ncr/ncr-leads-count-in-process\", params)\n        return data\n    }\n\n    //Content pending\n    async changeStatus(params){\n        const data = await amgApi.post(\"/lead/ncr/change-status\",params)\n        return data\n    }\n\n    // Modal Tracking Status\n    async getTrackingStatus(params){\n        const data = await amgApi.post(\"/lead/ncr/get-lead-tracking-status-by-id\",params)\n        return data\n    }\n\n    //Modal Questionnaire\n    async getQuestionnaire(params){\n        const data = await amgApi.post(\"/lead/ncr/get-all-leads-questions\",params)\n        return data\n    }\n\n    async saveQuestionnaire(params){\n        const data = await amgApi.post(\"/lead/ncr/create-leads-questionnaire\",params)\n        return data\n    }\n\n    // Mixin\n    async getSellers(params){\n        const data = await amgApi.post(\"/commons/sellerall/2\",params)\n        return data\n    }\n\n}\n\nexport default new NrcService()"],"sourceRoot":""}